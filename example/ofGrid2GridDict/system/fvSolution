/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    object          fvSolution;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


solvers
{
    "alpha.water.*"
    {
        nAlphaCorr      2;
        nAlphaSubCycles 1;
        cAlpha          0.3;

        MULESCorr       yes;
        nLimiterIter    5;
        alphaApplyPrevCorr  false;

        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;
        relTol          0;
    }

    "pcorr.*"
    {
        solver          PCG;
        preconditioner
        {
            preconditioner  GAMG;
            tolerance       1e-8;
            relTol          0;
            smoother        DICGaussSeidel;
            nPreSweeps      0;
            nPostSweeps     2;
            nFinestSweeps   2;
            cacheAgglomeration false;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        }

        tolerance       1e-08;
        relTol          0;
        maxIter         100;
    }

    p_rgh
    {
        solver          GAMG;
        tolerance       1e-8;
        relTol          0.00;
        smoother        DIC;
        nPreSweeps      0;
        nPostSweeps     2;
        nFinestSweeps   2;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 10;
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

    p_rghFinal
    {
        solver          PCG;
        preconditioner
        {
            preconditioner  GAMG;
            tolerance       1e-8;
            relTol          0;
            nVcycles        2;
            smoother        DICGaussSeidel;
            nPreSweeps      2;
            nPostSweeps     2;
            nFinestSweeps   2;
            cacheAgglomeration true;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        }

        tolerance       1e-8;
        relTol          0;
        maxIter         100;
    }

    "(U|k|omega)"
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-7;
        relTol          0.00;
        nSweeps         1;
    }

    "(U|k|omega)Final"
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-7;
        relTol          0;
        nSweeps         1;
    }

    "cellDisplacement.*"
    {
        solver          GAMG;
        tolerance       1e-6;
        relTol          0;
        smoother        GaussSeidel;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 10;
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

}

PIMPLE
{
    momentumPredictor   on;
    nOuterCorrectors    15;
    nCorrectors         2;
    nNonOrthogonalCorrectors 0;
    correctPhi          no;
    moveMeshOuterCorrectors no;
    
    residualControl
    {	      
        U
        {
            tolerance   0.0;
            relTol      0.0;
        }

        p_rgh
        {
            tolerance   0.0;
            relTol      0.0;
        }
    }


    fsResidualControl
    {	      
        U
        {
            prevTol     0.0;
            relPrevTol  0.0;
        }        
        
        p_rgh
        {
            prevTol     0.0;
            relPrevTol  0.0;
        }
    }
    
    
    
}

relaxationFactors
{
    equations
    {
        U       0.7;
        UFinal  1.0;
    }

    fields
    {
        p_rgh        0.3;
        p_rghFinal   1.0;
    }
}

// ************************************************************************* //
